import {
  isUndefined
} from "./chunk-XWASIDWF.js";
import {
  computed,
  ref,
  toRefs,
  watch
} from "./chunk-JYFD5GL7.js";

// node_modules/@arco-design/web-vue/es/_hooks/use-state.js
function useState(defaultValue) {
  const value = ref(defaultValue);
  const setValue = (newValue) => {
    value.value = newValue;
  };
  return [value, setValue];
}

// node_modules/@arco-design/web-vue/es/_hooks/use-merge-state.js
function useMergeState(defaultValue, props) {
  const { value } = toRefs(props);
  const [localValue, setLocalValue] = useState(!isUndefined(value.value) ? value.value : defaultValue);
  watch(value, (newVal) => {
    isUndefined(newVal) && setLocalValue(void 0);
  });
  const mergeValue = computed(() => !isUndefined(value.value) ? value.value : localValue.value);
  return [mergeValue, setLocalValue, localValue];
}

export {
  useState,
  useMergeState
};
//# sourceMappingURL=chunk-JBWLCEKQ.js.map
