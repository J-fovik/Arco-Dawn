{
  "version": 3,
  "sources": ["../../../../@arco-design/web-vue/es/_hooks/use-state.js", "../../../../@arco-design/web-vue/es/_hooks/use-merge-state.js"],
  "sourcesContent": ["import { ref } from \"vue\";\nfunction useState(defaultValue) {\n  const value = ref(defaultValue);\n  const setValue = (newValue) => {\n    value.value = newValue;\n  };\n  return [value, setValue];\n}\nexport { useState as default };\n", "import { toRefs, watch, computed } from \"vue\";\nimport { isUndefined } from \"../_utils/is.js\";\nimport useState from \"./use-state.js\";\nfunction useMergeState(defaultValue, props) {\n  const { value } = toRefs(props);\n  const [localValue, setLocalValue] = useState(!isUndefined(value.value) ? value.value : defaultValue);\n  watch(value, (newVal) => {\n    isUndefined(newVal) && setLocalValue(void 0);\n  });\n  const mergeValue = computed(() => !isUndefined(value.value) ? value.value : localValue.value);\n  return [mergeValue, setLocalValue, localValue];\n}\nexport { useMergeState as default };\n"],
  "mappings": ";;;;;;;;;;;AACA,SAAS,SAAS,cAAc;AAC9B,QAAM,QAAQ,IAAI,YAAY;AAC9B,QAAM,WAAW,CAAC,aAAa;AAC7B,UAAM,QAAQ;AAAA,EAChB;AACA,SAAO,CAAC,OAAO,QAAQ;AACzB;;;ACJA,SAAS,cAAc,cAAc,OAAO;AAC1C,QAAM,EAAE,MAAM,IAAI,OAAO,KAAK;AAC9B,QAAM,CAAC,YAAY,aAAa,IAAI,SAAS,CAAC,YAAY,MAAM,KAAK,IAAI,MAAM,QAAQ,YAAY;AACnG,QAAM,OAAO,CAAC,WAAW;AACvB,gBAAY,MAAM,KAAK,cAAc,MAAM;AAAA,EAC7C,CAAC;AACD,QAAM,aAAa,SAAS,MAAM,CAAC,YAAY,MAAM,KAAK,IAAI,MAAM,QAAQ,WAAW,KAAK;AAC5F,SAAO,CAAC,YAAY,eAAe,UAAU;AAC/C;",
  "names": []
}
