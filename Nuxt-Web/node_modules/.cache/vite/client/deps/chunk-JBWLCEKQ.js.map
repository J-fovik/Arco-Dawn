{
  "version": 3,
  "sources": ["../../../../@arco-design/web-vue/es/_hooks/use-state.js", "../../../../@arco-design/web-vue/es/_hooks/use-merge-state.js"],
  "sourcesContent": ["import { ref } from \"vue\";\r\nfunction useState(defaultValue) {\r\n  const value = ref(defaultValue);\r\n  const setValue = (newValue) => {\r\n    value.value = newValue;\r\n  };\r\n  return [value, setValue];\r\n}\r\nexport { useState as default };\r\n", "import { toRefs, watch, computed } from \"vue\";\r\nimport { isUndefined } from \"../_utils/is.js\";\r\nimport useState from \"./use-state.js\";\r\nfunction useMergeState(defaultValue, props) {\r\n  const { value } = toRefs(props);\r\n  const [localValue, setLocalValue] = useState(!isUndefined(value.value) ? value.value : defaultValue);\r\n  watch(value, (newVal) => {\r\n    isUndefined(newVal) && setLocalValue(void 0);\r\n  });\r\n  const mergeValue = computed(() => !isUndefined(value.value) ? value.value : localValue.value);\r\n  return [mergeValue, setLocalValue, localValue];\r\n}\r\nexport { useMergeState as default };\r\n"],
  "mappings": ";;;;;;;;;;;AACA,SAAS,SAAS,cAAc;AAC9B,QAAM,QAAQ,IAAI,YAAY;AAC9B,QAAM,WAAW,CAAC,aAAa;AAC7B,UAAM,QAAQ;AAAA,EAChB;AACA,SAAO,CAAC,OAAO,QAAQ;AACzB;;;ACJA,SAAS,cAAc,cAAc,OAAO;AAC1C,QAAM,EAAE,MAAM,IAAI,OAAO,KAAK;AAC9B,QAAM,CAAC,YAAY,aAAa,IAAI,SAAS,CAAC,YAAY,MAAM,KAAK,IAAI,MAAM,QAAQ,YAAY;AACnG,QAAM,OAAO,CAAC,WAAW;AACvB,gBAAY,MAAM,KAAK,cAAc,MAAM;AAAA,EAC7C,CAAC;AACD,QAAM,aAAa,SAAS,MAAM,CAAC,YAAY,MAAM,KAAK,IAAI,MAAM,QAAQ,WAAW,KAAK;AAC5F,SAAO,CAAC,YAAY,eAAe,UAAU;AAC/C;",
  "names": []
}
