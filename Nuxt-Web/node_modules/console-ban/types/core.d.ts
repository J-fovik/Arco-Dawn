import { BrowserType } from './constants';
export interface IConsoleBanOptions {
    /**
     * enable loop infinite debugger
     * @default true
     */
    debug?: boolean;
    /**
     * loop debugger interval
     * @default 300
     */
    debugTime?: number;
    /**
     * console opend callback
     * @default undefined
     */
    callback?: () => any;
    /**
     * redirect url
     * @default undefined
     */
    redirect?: string;
    /**
     * disable console.clear
     * @default true -> disable console.clear
     */
    clear?: boolean;
    /**
     * rewrite document content
     * @default undefined
     */
    write?: string | Element;
    /**
     * disable bfcache
     * @default true -> disable bfcache
     */
    bfcache?: boolean;
}
export type options = IConsoleBanOptions;
export declare class ConsoleBan {
    _debug?: boolean;
    _debugTime?: number;
    _clear?: boolean;
    _bfcache?: boolean;
    _callback?: () => any;
    _redirect?: string;
    _write?: string | Element;
    constructor(option: IConsoleBanOptions);
    clear(): void;
    bfcache(): void;
    debug(): void;
    redirect(env?: BrowserType): void;
    callback(): void;
    write(): void;
    fire(env?: BrowserType): void;
    prepare(): void;
    ban(): void;
}
