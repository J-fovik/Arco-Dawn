{"version":3,"file":"rank-ea90cd59.js","sources":["../../../../pages/rank.vue"],"sourcesContent":["<template>\r\n\t<div class=\"max-w-container mx-auto\">\r\n\t\t<!-- 选择过滤 -->\r\n\t\t<zs-select-filter\r\n\t\t\t:data=\"[sfData, nfData, klData]\"\r\n\t\t\t:default-values=\"{ sf: sfData?.sf, nf: nfData?.nf, kl: klData?.kl }\"\r\n\t\t\t@change=\"changeFilter\"\r\n\t\t\tclass=\"mt-[20px]\"\r\n\t\t/>\r\n\t\t<!-- 搜索框 -->\r\n\t\t<div class=\"flex items-center mt-[20px]\">\r\n\t\t\t<!-- 请输入您的分数 -->\r\n\t\t\t<div class=\"w-[400px]\">\r\n\t\t\t\t<a-input\r\n\t\t\t\t\tv-model.trim=\"form.score\"\r\n\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\tclass=\"rounded-lg h-[38px]\"\r\n\t\t\t\t\tplaceholder=\"请输入您的分数\"\r\n\t\t\t\t\tallow-clear\r\n\t\t\t\t\t@clear=\"onScoreInput\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<template #prefix>\r\n\t\t\t\t\t\t<icon-search />\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</a-input>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w-[120px] ml-[20px]\">\r\n\t\t\t\t<a-button\r\n\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\tclass=\"openButton w-[120px]\"\r\n\t\t\t\t\t@click=\"onScoreInput\"\r\n\t\t\t\t>\r\n\t\t\t\t\t搜索\r\n\t\t\t\t</a-button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<!-- 折线图 -->\r\n\t\t<zs-title title=\"折线图\" size=\"small\" class=\"mt-[20px]\" />\r\n\t\t<div class=\"bg-[#FFF7F0] p-[15px_20px] text-[#FFA864] mt-[10px] rounded-[4px]\">\r\n\t\t\t<div>高考分数：{{ textFormat(form.scoreSearchInfo.score) }}分</div>\r\n\t\t\t<div class=\"my-[5px]\">\r\n\t\t\t\t同分人数：{{ textFormat(turnThousandth(form.scoreSearchInfo.cnt)) }}人\r\n\t\t\t</div>\r\n\t\t\t<div>排名区间：{{ textFormat(turnThousandth(form.scoreSearchInfo.wc)) }}名</div>\r\n\t\t</div>\r\n\t\t<div class=\"h-[350px] border-solid border border-[#EDEDED] rounded-[4px] mt-[10px]\">\r\n\t\t\t<zs-e-charts :options=\"lineChartOption\" />\r\n\t\t</div>\r\n\t\t<div v-if=\"form.scoreSearchInfo?.isHistory\" class=\"mt-[20px]\">\r\n\t\t\t<div class=\"mb-[10px]\">历史同位次考生得分</div>\r\n\t\t\t<span\r\n\t\t\t\tclass=\"mr-[20px]\"\r\n\t\t\t\tv-for=\"(item, index) in form.scoreSearchInfo?.historyList\"\r\n\t\t\t\t:key=\"index\"\r\n\t\t\t\t>{{ item.score }}分 ({{ item.nf }})\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<!-- 一分一段表 -->\r\n\t\t<zs-title title=\"一分一段表\" size=\"small\" class=\"mt-[20px]\" />\r\n\t\t<a-table\r\n\t\t\tclass=\"mt-[20px] cursor-pointer\"\r\n\t\t\ttable-layout-fixed\r\n\t\t\t:columns=\"createTableColumns()\"\r\n\t\t\t:data=\"rankData.list\"\r\n\t\t\t:bordered=\"{ wrapper: true, cell: true }\"\r\n\t\t\t:pagination=\"{ ...pagination, total: rankData.total }\"\r\n\t\t\t@page-change=\"onPageChange\"\r\n\t\t\t@page-size-change=\"onPageSizeChange\"\r\n\t\t\t:loading=\"status === 'pending'\"\r\n\t\t/>\r\n\t</div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport * as echarts from 'echarts/core';\r\n// 设置头信息\r\nuseHead({\r\n\ttitle: '位次查询',\r\n});\r\n// 全局插件\r\nconst { $zsFetch } = useNuxtApp();\r\n// 用户信息\r\nconst { userInfo } = useUser();\r\n// 网站信息\r\nconst { provinceList } = useWebsiteInformation();\r\n// form\r\nconst { form } = useForm(() => ({\r\n\tsf: userInfo.value.province,\r\n\tnf: '',\r\n\tkl: '',\r\n\tlineChart: [] as any,\r\n\tlineInfo: {} as any,\r\n\tscore: '',\r\n\tscoreSearchInfo: {} as any,\r\n}));\r\n// 分页控制\r\nconst { pagination, resetData, onPageChange, onPageSizeChange } = usePagination(() => {\r\n\t// 滚动到顶部\r\n\twindow.scrollTo(0, 0);\r\n\t// 请求数据\r\n\trefreshRankData();\r\n});\r\n\r\n// 折线图配置\r\nconst lineChartOption = computed(() => {\r\n\treturn {\r\n\t\ttooltip: {\r\n\t\t\ttrigger: 'axis',\r\n\t\t\tformatter: (params: any) => {\r\n\t\t\t\t// 最后展示文本\r\n\t\t\t\tlet tooltipText;\r\n\t\t\t\t// 创建一个用于存储历史得分信息的字符串\r\n\t\t\t\tlet historyScoresText;\r\n\t\t\t\t// 是否有历史\r\n\t\t\t\tlet isHistory = false;\r\n\t\t\t\t// 赋值信息\r\n\t\t\t\tform.value.lineInfo = lineData.value.find(\r\n\t\t\t\t\t(item: any) => item.score == params[0].axisValueLabel\r\n\t\t\t\t);\r\n\t\t\t\t// 检查是否存在历史同位次考生得分\r\n\t\t\t\tif (\r\n\t\t\t\t\tform.value.lineInfo?.historyList &&\r\n\t\t\t\t\tform.value.lineInfo.historyList.length > 0\r\n\t\t\t\t) {\r\n\t\t\t\t\tisHistory = true;\r\n\t\t\t\t\t// 历史文本\r\n\t\t\t\t\thistoryScoresText = form.value.lineInfo.historyList\r\n\t\t\t\t\t\t.map((item: any) => {\r\n\t\t\t\t\t\t\treturn `<span style=\"margin-right:10px\">${item.score}(${item.nf})</span>`;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.join('');\r\n\t\t\t\t}\r\n\t\t\t\t// 展示文本\r\n\t\t\t\ttooltipText = ` <div style=\"background:white;padding:10px\">\r\n\t\t\t\t\t\t\t\t\t<div>高考分数：${form.value.lineInfo.score}分</div>\r\n\t\t\t\t\t\t\t\t\t${\r\n\t\t\t\t\t\t\t\t\t\tform.value.lineInfo.pc\r\n\t\t\t\t\t\t\t\t\t\t\t? `<div>${form.value.lineInfo.pc}：${form.value.lineInfo.pcx}分 </div>`\r\n\t\t\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<div>同分人数：${turnThousandth(form.value.lineInfo.cnt)}名 </div>\r\n\t\t\t\t\t\t\t\t\t<div>排名区间：${turnThousandth(\r\n\t\t\t\t\t\t\t\t\t\tform.value.lineInfo.wcRange.split('-')[0] +\r\n\t\t\t\t\t\t\t\t\t\t\t'-' +\r\n\t\t\t\t\t\t\t\t\t\t\tturnThousandth(\r\n\t\t\t\t\t\t\t\t\t\t\t\tform.value.lineInfo.wcRange.split('-')[1]\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}名 </div>\r\n\t\t\t\t\t\t\t\t\t ${isHistory ? `<div>历史同位次考生得分：</div> ${historyScoresText}` : ''}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\treturn tooltipText;\r\n\t\t\t},\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tleft: 'center',\r\n\t\t},\r\n\t\txAxis: {\r\n\t\t\ttype: 'category',\r\n\t\t\tboundaryGap: false,\r\n\t\t\tname: '分数', // 在这里设置 X 轴的名称为“分数”\r\n\t\t\tnameLocation: 'end', // 设置名称显示的位置为轴的中间\r\n\t\t\tnameTextStyle: {\r\n\t\t\t\t// 设置名称的样式\r\n\t\t\t\tcolor: '#333', // 名称颜色\r\n\t\t\t\tfontSize: 14, // 名称字体大小\r\n\t\t\t},\r\n\t\t\tdata: lineData.value.map((o: any) => o.score),\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\ttype: 'value',\r\n\t\t\tname: '人数', // 在这里设置Y轴的名称为“人数”\r\n\t\t\tnameLocation: 'end', // 设置名称显示的位置为轴的末端\r\n\t\t\tnameTextStyle: {\r\n\t\t\t\t// 设置名称的样式\r\n\t\t\t\tcolor: '#333', // 名称颜色\r\n\t\t\t\tfontSize: 14, // 名称字体大小\r\n\t\t\t},\r\n\t\t\taxisLabel: {\r\n\t\t\t\tshow: true,\r\n\t\t\t\tformatter: function (value: any) {\r\n\t\t\t\t\treturn turnThousandth(value); // 使用本地化格式化数字，也可以使用其他格式化方法\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tsymbol: 'none',\r\n\t\t\t\tsampling: 'lttb',\r\n\t\t\t\titemStyle: {\r\n\t\t\t\t\tcolor: '#FFA864',\r\n\t\t\t\t},\r\n\t\t\t\tareaStyle: {\r\n\t\t\t\t\tcolor: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\toffset: 0,\r\n\t\t\t\t\t\t\tcolor: '#FFF2E7',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\toffset: 1,\r\n\t\t\t\t\t\t\tcolor: '#FFFFFF',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]),\r\n\t\t\t\t},\r\n\t\t\t\tdata: lineData.value.map((o: any) => o.cnt),\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n});\r\n// 列属性\r\nconst createTableColumns = (): TableCustomColumnData[] => {\r\n\treturn [\r\n\t\t{\r\n\t\t\ttitle: '分数',\r\n\t\t\tdataIndex: 'score',\r\n\t\t\talign: 'center',\r\n\t\t\theaderCellStyle: {\r\n\t\t\t\tfontSize: '14px',\r\n\t\t\t\tbackgroundColor: '#EDEDED',\r\n\t\t\t\tcolor: '#333333',\r\n\t\t\t\tfontWeight: 'bold',\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '本段人数',\r\n\t\t\tdataIndex: 'cnt',\r\n\t\t\talign: 'center',\r\n\t\t\theaderCellStyle: {\r\n\t\t\t\tfontSize: '14px',\r\n\t\t\t\tbackgroundColor: '#EDEDED',\r\n\t\t\t\tcolor: '#333333',\r\n\t\t\t\tfontWeight: 'bold',\r\n\t\t\t},\r\n\t\t\trender: ({ record }) => {\r\n\t\t\t\treturn textFormat(turnThousandth(record.cnt));\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '累计人数',\r\n\t\t\tdataIndex: 'wc',\r\n\t\t\talign: 'center',\r\n\t\t\theaderCellStyle: {\r\n\t\t\t\tfontSize: '14px',\r\n\t\t\t\tbackgroundColor: '#EDEDED',\r\n\t\t\t\tcolor: '#333333',\r\n\t\t\t\tfontWeight: 'bold',\r\n\t\t\t},\r\n\t\t\trender: ({ record }) => {\r\n\t\t\t\treturn textFormat(turnThousandth(record.wc));\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n};\r\n// 分数查询\r\nconst onScoreInput = () => {\r\n\t// 赋值分数搜索信息\r\n\tform.value.scoreSearchInfo =\r\n\t\tlineData.value.find((item: any) => item.score == form.value.score) ?? {};\r\n\t// 判断是否存在历史数据;\r\n\tform.value.scoreSearchInfo.isHistory =\r\n\t\tform.value.scoreSearchInfo?.historyList?.length > 0 ? true : false;\r\n};\r\n// change事件\r\nconst changeFilter = async (val: any) => {\r\n\tif (val.sf !== sfData.value!.sf) {\r\n\t\tsfData.value!.sf = val.sf;\r\n\t\tnfData.value!.nf = '';\r\n\t\tklData.value!.kl = '';\r\n\t\t// 查询年份\r\n\t\tawait refreshNfData();\r\n\t\tawait refreshKlData();\r\n\t}\r\n\tif (val.nf !== nfData.value!.nf) {\r\n\t\tnfData.value!.nf = val.nf;\r\n\t\tklData.value!.kl = '';\r\n\t\t// 查询科类\r\n\t\tawait refreshKlData();\r\n\t}\r\n\tif (val.kl !== klData.value!.kl) {\r\n\t\tklData.value!.kl = val.kl;\r\n\t}\r\n\t// 查询折线图\r\n\trefreshLineData();\r\n\t// 请求数据\r\n\tresetData();\r\n};\r\n// 获取省份数据;\r\nconst { data: sfData } = await useAsyncData('sfList', async () => {\r\n\t// 暴露数据\r\n\tconst sfList = provinceList.value.map((o: any) => {\r\n\t\treturn {\r\n\t\t\t...o,\r\n\t\t\tvalue: o.sf,\r\n\t\t\tlabel: o.sf,\r\n\t\t};\r\n\t});\r\n\treturn {\r\n\t\ttitle: '所在地区',\r\n\t\tkey: 'sf',\r\n\t\tisShow: true,\r\n\t\tmultiple: false,\r\n\t\toptions: sfList,\r\n\t\tsf: userInfo.value.province,\r\n\t};\r\n});\r\n// 获取年份数据\r\nconst { data: nfData, refresh: refreshNfData } = await useAsyncData('nfList', async () => {\r\n\tconst [err, res] = await $zsFetch(API_URLS.MORE.GET_RANK_NF, {\r\n\t\tbody: {\r\n\t\t\tsf: sfData.value!.sf,\r\n\t\t},\r\n\t});\r\n\t// 处理数据\r\n\tconst nfList =\r\n\t\tres?.data?.map((o: any) => {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: o.nf,\r\n\t\t\t\tlabel: o.nf,\r\n\t\t\t};\r\n\t\t}) ?? [];\r\n\t// 暴露数据\r\n\treturn {\r\n\t\ttitle: '录取年份',\r\n\t\tkey: 'nf',\r\n\t\tisShow: true,\r\n\t\tmultiple: false,\r\n\t\toptions: nfList,\r\n\t\tnf: nfList[0].value ?? '',\r\n\t};\r\n});\r\n// 获取科类数据\r\nconst { data: klData, refresh: refreshKlData } = await useAsyncData('klList', async () => {\r\n\tconst [err, res] = await $zsFetch(API_URLS.MORE.GET_RANK_KL, {\r\n\t\tbody: {\r\n\t\t\tsf: sfData.value!.sf,\r\n\t\t\tnf: nfData.value!.nf,\r\n\t\t},\r\n\t});\r\n\t// 处理数据\r\n\tconst klList =\r\n\t\tres?.data?.map((o: any) => {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: o.kl,\r\n\t\t\t\tlabel: o.kl,\r\n\t\t\t};\r\n\t\t}) ?? [];\r\n\t// 暴露数据\r\n\treturn {\r\n\t\ttitle: '考生类别',\r\n\t\tkey: 'kl',\r\n\t\tisShow: true,\r\n\t\tmultiple: false,\r\n\t\toptions: klList,\r\n\t\tkl: klList[0].value ?? '',\r\n\t};\r\n});\r\n// 获取一分一段列表\r\nconst {\r\n\tdata: rankData,\r\n\tstatus,\r\n\trefresh: refreshRankData,\r\n} = await useAsyncData('rankList', async () => {\r\n\tconst [err, res] = await $zsFetch(API_URLS.MORE.GET_RANK_WC_LIST, {\r\n\t\tbody: {\r\n\t\t\tsf: sfData.value!.sf,\r\n\t\t\tnf: nfData.value!.nf,\r\n\t\t\tkl: klData.value!.kl,\r\n\t\t\tcurrentPage: pagination.value.current,\r\n\t\t\tpageSize: pagination.value.pageSize,\r\n\t\t\tpagingOrNot: 1,\r\n\t\t},\r\n\t});\r\n\t// 暴露数据\r\n\treturn {\r\n\t\tlist: res?.data?.rankList ?? [],\r\n\t\ttotal: res?.data?.totalCount ?? 0,\r\n\t} as any;\r\n});\r\n// 获取图表\r\nconst { data: lineData, refresh: refreshLineData } = await useAsyncData('lineList', async () => {\r\n\tconst [err, res] = await $zsFetch(API_URLS.MORE.GET_RANK_WC_LINE_CHART, {\r\n\t\tbody: {\r\n\t\t\tsf: sfData.value!.sf,\r\n\t\t\tnf: nfData.value!.nf,\r\n\t\t\tkl: klData.value!.kl,\r\n\t\t},\r\n\t});\r\n\t// 暴露数据\r\n\treturn res?.data ?? [];\r\n});\r\n</script>\r\n<style scoped>\r\n.openButton {\r\n\tbackground: #7c92ff;\r\n\tcolor: white;\r\n\tborder-radius: 4px;\r\n}\r\n.openButton:hover {\r\n\tbackground: #7c92ff;\r\n\tcolor: white;\r\n\tborder-radius: 4px;\r\n}\r\n</style>\r\n"],"names":["_withAsyncContext"],"mappings":"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"}